{"version":3,"sources":["Navbar.js","lading.js","Home.js","date.js","Create.js","Edit.js","Card.js","Tabel.js","ListItem.js","getQuert.js","App.js","reportWebVitals.js","apollo-client.js","index.js"],"names":["Navbar","className","to","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","theme","createTheme","Album","ThemeProvider","CssBaseline","Box","sx","bgcolor","pt","pb","Container","maxWidth","component","gutterBottom","paragraph","Stack","direction","spacing","justifyContent","Button","style","p","Home","useState","lahir","setLahir","tanggal","setTanggal","noValidate","id","label","value","onChange","e","target","TextField","type","defaultValue","width","InputLabelProps","shrink","Create","name","setName","email","setEmail","author","setAuthor","alamat","setAlamat","onSubmit","preventDefault","required","queryAnggota","gql","Edit","nama","useQuery","data","loading","bull","display","mx","transform","BasicCard","Card","minWidth","CardContent","fontSize","mb","CardActions","size","createData","calories","fat","sort","a","b","ListItem1","props","domisili","ListPassenger","datas","cellPadding","cellSpacing","margin","pendaftar","map","item","ListItem","hapusPengunjung","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","headers","ReactDOM","render","ApolloProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e0663fa.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <h1>SD Kutamendalah</h1>\n      <div className=\"links\">\n        <Link to=\"/\" >Home</Link>\n        <Link to=\"/\">About</Link>\n        <Link to=\"/pendaftar\">Cek Pendaftar</Link>\n        <Link to=\"/create\" className=\"daftar\">Daftar</Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Link1 from \"@mui/material/Link\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link1 color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link1>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Album() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n\r\n      <main>\r\n        {/* Hero unit */}\r\n        <Box\r\n          sx={{\r\n            bgcolor: \"background.paper\",\r\n            pt: 8,\r\n            pb: 6,\r\n          }}\r\n        >\r\n          <Container maxWidth=\"sm\">\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"text.primary\"\r\n              gutterBottom\r\n            >\r\n              SD Kutamendala\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              color=\"text.secondary\"\r\n              paragraph\r\n            >\r\n              Mari Begabung dengan sekolah kita SD Kutamendala\r\n            </Typography>\r\n            <Stack\r\n              sx={{ pt: 4 }}\r\n              direction=\"row\"\r\n              spacing={2}\r\n              justifyContent=\"center\"\r\n            >\r\n              <Button variant=\"contained\">\r\n                <Link to=\"/create\" style={{ color: \"white\" }}>\r\n                  Daftar\r\n                </Link>\r\n              </Button>\r\n              <Button variant=\"outlined\">\r\n                <Link to=\"/pendaftar\">Cek Pendaftar</Link>\r\n              </Button>\r\n            </Stack>\r\n          </Container>\r\n        </Box>\r\n      </main>\r\n      {/* Footer */}\r\n      <Box sx={{ bgcolor: \"background.paper\", p: 6 }} component=\"footer\">\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Footer\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"text.secondary\"\r\n          component=\"p\"\r\n        >\r\n          Something here to give the footer a purpose!\r\n        </Typography>\r\n        <Copyright />\r\n      </Box>\r\n      {/* End footer */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","// import BlogList from \"./BlogList\";\n// import useFetch from \"./useFetch\";\n\nimport Album from \"./lading\";\n\n\nconst Home = () => {\n \n  \n  return (\n    <div className=\"home\">\n      <Album/>\n    </div>\n  );\n};\n\nexport default Home;\n","import * as React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Date() {\r\n  const [lahir, setLahir] = useState(\"\");\r\n  const [tanggal, setTanggal] = useState(\"\");\r\n\r\n  return (\r\n    <Stack component=\"form\" noValidate spacing={1}>\r\n      <label>Tempat Lahir</label>\r\n      <input\r\n        id=\"outlined-basic\"\r\n        label=\"Tempat Lahir\"\r\n        variant=\"outlined\"\r\n        value={lahir}\r\n        onChange={(e) => setLahir(e.target.value)}\r\n      />\r\n      <br/>\r\n      <TextField\r\n        spacing={3}\r\n        value={tanggal}\r\n        onChange={(e) => setTanggal(e.target.value)}\r\n        id=\"date\"\r\n        label=\"Tanggal Lahir\"  \r\n        type=\"date\"\r\n        defaultValue=\"2017-05-24\"\r\n        sx={{ width: 220 }}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport Date from './date';\n\n\nconst Create = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [author, setAuthor] = useState(\"Perempuan\");\n  const [alamat, setAlamat] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // const blog = {name , email , author};\n  };\n\n  return (\n    <div className=\"create\">\n      <form onSubmit={handleSubmit}>\n        <h2> Pendaftaran </h2>\n        <label>Nama Lengkap</label>\n        <input\n          type=\"text\"\n          required\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <label>Email</label>\n        <input\n          required\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <label>Jenis Kelamin</label>\n        <select value={author} onChange={(e) => setAuthor(e.target.value)}>\n          <option value=\"laki-laki\">Laki-Laki</option>\n          <option value=\"Perempuan\">Perempuan</option>\n        </select>\n        <label>Tempat dan Tanggal Lahir</label>\n        <br />\n        <Date />\n        <br />\n        <label>Alamat Tinggal</label>\n\n        <textarea\n          required\n          value={alamat}\n          onChange={(e) => setAlamat(e.target.value)}\n        />\n\n        <button className=\"createButton\">Add Blog</button>\n      </form>\n    </div>\n  );\n};\nexport default Create;\n","import { useEffect, useState } from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nimport Date from \"./date\";\r\n//grara\r\nconst queryAnggota = gql`\r\n  query MyQuery {\r\n    pendaftar {\r\n      domisili\r\n      id\r\n      nama\r\n    }\r\n  }\r\n`;\r\nconst Edit = () => {\r\n\r\n  const [nama, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"Perempuan\");\r\n  const [alamat, setAlamat] = useState(\"\");\r\n   const { data: datas, loading } = useQuery(queryAnggota);\r\n  // useEffect(()=> {\r\n  //   setName(datas.name)\r\n  // } , [datas])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // const blog = {name , email , author};\r\n  };\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h2> Edit Pendaftaran </h2>\r\n        <label>Nama Lengkap</label>\r\n        <input\r\n          type=\"text\"\r\n          required\r\n          value={nama}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <label>Email</label>\r\n        <input\r\n          required\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <label>Jenis Kelamin</label>\r\n        <select value={author} onChange={(e) => setAuthor(e.target.value)}>\r\n          <option value=\"laki-laki\">Laki-Laki</option>\r\n          <option value=\"Perempuan\">Perempuan</option>\r\n        </select>\r\n        <label>Tempat dan Tanggal Lahir</label>\r\n        <br />\r\n        <Date />\r\n        <br />\r\n        <label>Alamat Tinggal</label>\r\n\r\n        <textarea\r\n          required\r\n          value={alamat}\r\n          onChange={(e) => setAlamat(e.target.value)}\r\n        />\r\n\r\n        <button className=\"editButton\">Edit Data</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Edit;\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst bull = (\r\n  <Box\r\n    component=\"span\"\r\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\r\n  >\r\n    â¢\r\n  </Box>\r\n);\r\n\r\nexport default function BasicCard() {\r\n  return (\r\n    <Card sx={{ minWidth: 275 }}>\r\n      <CardContent>\r\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n          Word of the Day\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n          be{bull}nev{bull}o{bull}lent\r\n        </Typography>\r\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n          adjective\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          well meaning and kindly.\r\n          <br />\r\n          {'\"a benevolent smile\"'}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\">Learn More</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableFooter from \"@mui/material/TableFooter\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\";\r\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\r\n\r\nfunction TablePaginationActions(props) {\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onPageChange(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Zehan Baihaqi\", \"semarang\", \"\"),\r\n  createData(\"Badja\", \"Jakarta\", \"\"),\r\n  createData(\"Iklham\", \"Jepang\", \"\"),\r\n  createData(\"Ilham Seteven\", \"Sirabaya\", \"\"),\r\n  createData(\"Human Riza\", \"Jambi\", \"\"),\r\n  createData(\"Honeycomb\", \"pemalang\", \"\"),\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\nexport default function BasicTable() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"right\">\r\n                {row.calories}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"right\">\r\n                {row.fat}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: {\r\n                  \"aria-label\": \"rows per page\",\r\n                },\r\n                native: true,\r\n              }}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","const ListItem1 = (props) => {\n\n    const { id, nama, domisili  } = props.data\n\n    return (\n        <tr>\n            <td>{id}</td>\n            <td>{nama}</td>\n            <td>{domisili}</td>\n            \n        </tr>\n    )\n}\n\nexport default ListItem1;","import { gql, useQuery } from \"@apollo/client\";\r\nimport ListItem1 from \"./ListItem\";\r\nconst queryAnggota = gql`\r\n  query MyQuery {\r\n    pendaftar {\r\n      domisili\r\n      id\r\n      nama\r\n    }\r\n  }\r\n`;\r\n\r\nconst ListPassenger = (props) => {\r\n  const { data: datas, loading } = useQuery(queryAnggota);\r\n\r\n  return (\r\n    <div>\r\n      <table cellPadding=\"5px\" cellSpacing=\"0\" style={{ margin: \"auto\" }}>\r\n        <thead className=\"abuabu\">\r\n          <td>No</td>\r\n          <td>Nama</td>\r\n          <td>Domisili</td>\r\n        </thead>\r\n        {datas?.pendaftar.map((item) => (\r\n          <ListItem1\r\n            key={item.id}\r\n            data={item}\r\n            hapusPengunjung={props.hapusPengunjung}\r\n          />\r\n        ))}\r\n      </table>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListPassenger;\r\n","import Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Create from \"./Create\";\nimport Edit from \"./Edit\";\nimport BasicCard from \"./Card\";\nimport BasicTable from \"./Tabel\";\nimport ListPassenger from \"./getQuert\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n\n            <Route path=\"/create\" exact>\n              <Create />\n            </Route>\n            <Route path=\"/card\" exact>\n              <BasicCard />\n            </Route>\n            <Route path=\"/edit\" exact>\n              <Edit />\n            </Route>\n            <Route path=\"/pendaftar\" exact>\n              <ListPassenger />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    ApolloClient,\r\n    InMemoryCache\r\n  } from \"@apollo/client\";\r\n  \r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://bismillahproject.hasura.app/v1/graphql\",\r\n  cache: new InMemoryCache(),\r\n  headers: {\r\n    \"x-hasura-admin-secret\":\r\n      \"CxDM2mRAGp2guB8zzXTkpVPy1qqxRScUVQPCVOY0N5bIY8svfqoGKDRv0GX31pbT\",\r\n  },\r\n});\r\n  \r\n  export default client","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport client from \"./apollo-client\";\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}